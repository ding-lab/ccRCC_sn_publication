install.packages(pkg_name_tmp, dependencies = T)
}
print(paste0(pkg_name_tmp, " is installed!"))
library(package = pkg_name_tmp, character.only = T)
}
## set working directory
dir_base = "~/Library/CloudStorage/Box-Box/Ding_Lab/Projects_Current/RCC/ccRCC_snRNA"
setwd(dir_base)
## set run id
version_tmp <- 1
run_id <- paste0(format(Sys.Date(), "%Y%m%d") , ".v", version_tmp)
## set output directory
source("./ccRCC_snRNA_analysis/functions.R")
dir_out <- paste0(makeOutDir(), run_id, "/")
dir.create(dir_out)
# input dependencies ------------------------------------------------------
## input merged tumor content from bulk and snRNA
celltype_frac_snrna_df <- fread(data.table = F, input = "./Resources/Analysis_Results/annotate_barcode/count_fraction/count_celltype_wepithelial_fraction_per_sample/20211007.v1/CellGroupBarcodes_Number_and_Fraction_per_Sample20211007.v1.tsv")
celltype_frac_snatac_df <- fread(data.table = F, input = "./Resources/Analysis_Results/annotate_barcode/count_fraction/count_celltype_wepithelial_fraction_per_sample_snatac/20211007.v1/CellGroupBarcodes_Number_and_Fraction_per_snATAc_Sample20211007.v1.tsv")
# make plot data ----------------------------------------------------------
plot_data_df <- merge(x = celltype_frac_snrna_df, y = celltype_frac_snatac_df, by = c("Aliquot_WU", "Cell_group"), all.x = T, suffixes = c(".snRNA", ".snATAC"))
plot_data_df <- plot_data_df %>%
mutate(x_plot = Frac_CellGroupBarcodes_ByAliquot.snRNA) %>%
mutate(y_plot = Frac_CellGroupBarcodes_ByAliquot.snATAC) %>%
filter(!is.na(x_plot) & !is.na(y_plot))
# make scatterplot --------------------------------------------------------
## reference: https://rpkgs.datanovia.com/ggpubr/reference/stat_cor.html
p <- ggplot(data = plot_data_df, mapping = aes(x = x_plot, y = y_plot))
p <- p + geom_smooth(method=lm , color="blue", se=FALSE, alpha = 0.5)
p <- p + geom_point_rast(alpha = 0.8, shape = 16)
# Add correlation coefficient
p <- p + stat_cor(method = "pearson", label.x = 0.01, label.y = 0.4, size = 6)
p <- p + xlab("Cell type content estimated from snRNA Data")
p <- p + ylab("Cell type content estimated from snATAC Data")
p <- p + theme_classic(base_size = 16)
p <- p + theme(axis.text = element_text(color = "black", size = 16),
axis.title = element_text(color = "black", size = 16))
# save scatterplot --------------------------------------------------------
file2write <- paste0(dir_out, "scatterplot",".png")
png(file2write, width = 800, height = 800, res = 150)
print(p)
dev.off()
file2write <- paste0(dir_out, "scatterplot",  ".pdf")
pdf(file2write, width = 5, height = 5, useDingbats = F)
print(p)
dev.off()
lm_fit <- lm(y_plot ~ x_plot, data = plot_data_df)
lm_fit
summary(lm_fit)
lm_fit$call
lm_fit$coefficients
lm_fit$residuals
lm_fit$effects
lm_fit$model
summary(fit)$coefficients[,4]
summary(fit)$coefficients[,3]
summary(lm_fit)
summary(lm_fit)$coefficients[,3]
summary(lm_fit)$coefficients[,4]
# Manuscript:   Epigenetic and transcriptomic characterization reveals progression markers and essential pathways in clear cell renal cell carcinoma
# Author:       Yige Wu
# Description:  Bar plot showing normalized bulk gene expression of COL4A1, OSMR, and TGM2 in sh-CP-C1, sh-CP-C2, sh-NT1, and sh-NT2
# Section:      Results - CP in mediating tumor extracellular matrix and tumor-stroma interaction in ccRCC
#=======================================================================================
# Load libraries  and set working directory  -----------------------------------
## load libraries
packages = c(
"data.table",
"stringr",
"plyr",
"dplyr",
"ggplot2",
"ggpubr",
"RColorBrewer"
)
for (pkg_name_tmp in packages) {
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
install.packages(pkg_name_tmp, dependencies = T)
}
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(pkg_name_tmp)
}
library(package = pkg_name_tmp, character.only = T)
}
## set working directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# input -------------------------------------------------------------------
plotdata_df <- fread(data.table = F, input = "../../data/KLF9.motif_score_bycell.tsv.gz", fill=TRUE)
# make colors -------------------------------------------------------------
color_tumorcell <- RColorBrewer::brewer.pal(n = 9, name = "Dark2")[4]
color_pt <- RColorBrewer::brewer.pal(n = 9, name = "Dark2")[1]
# plot --------------------------------------------------------------------
plotdata_df <- plotdata_df %>%
mutate(cell_group_text = ifelse(cell_group_plot %in% c("Tumor", "EMT tumor cells"), "Tumor cells", "PT cells")) %>%
group_by(cell_group_text) %>%
mutate(outlier = (motif_score > median(motif_score) + IQR(motif_score) * 1.5) | (motif_score < median(motif_score) - IQR(motif_score) * 1.5))
p <- ggviolin(data = plotdata_df, x = "cell_group_text", y = "motif_score", fill = "cell_group_text", color = NA)
p <- p + stat_boxplot(geom = "errorbar", width = 0.2)
p <- p + geom_boxplot(width = 0.2)
p <- p + scale_fill_manual(values = c("Tumor cells" = color_tumorcell, "PT cells" = color_pt))
p <- p + stat_compare_means(method = "t.test", label = "p.format", label.y = 6, label.x = 1.25)
p <- p + ylab(label = paste0("KLF9 ", " motif enrichment"))
p <- p + theme(legend.position = "none", axis.title.x = element_blank(),
axis.title.y = element_text(size = 12, color = "black"), axis.text = element_text(color = "black", size = 12))
t.test(plotdata_df$motif_score[plotdata_df$cell_group_text == "Tumor cells"], plotdata_df$motif_score[plotdata_df$cell_group_text == "PT cells"])
pvalue_ttest <- t.test(plotdata_df$motif_score[plotdata_df$cell_group_text == "Tumor cells"], plotdata_df$motif_score[plotdata_df$cell_group_text == "PT cells"])
pvalue_ttest$p.value
pvalue_ttest
pvalue_ttest
pvalue_ttest$p.value
pvalue_ttest$estimate
# Manuscript:   Epigenetic and transcriptomic characterization reveals progression markers and essential pathways in clear cell renal cell carcinoma
# Author:       Yige Wu
# Description:  Scatter plot displaying the Log2 transformed fold change for gene promoter accessibility versus Log2 transformed fold change for gene expression in EMT tumor clusters vs. Epi-H tumor clusters highlighted in a
# Section:      Results - Tumor subgroups with distinct epithelial and mesenchymal features
#=======================================================================================
# Load libraries  and set working directory  -----------------------------------
## load libraries
packages = c(
"plyr",
"dplyr",
"stringr",
"reshape2",
"data.table",
"ggplot2",
"ggrepel",
"ggrastr",
"RColorBrewer"
)
for (pkg_name_tmp in packages) {
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
install.packages(pkg_name_tmp, dependencies = T)
}
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(pkg_name_tmp)
}
library(package = pkg_name_tmp, character.only = T)
}
## set working directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# input -------------------------------------------------------------------
## input degs
peaks2degs_df <- fread(data.table = F, input = "../../data/2EMTclusters_vs_5Epithelialclusters.DAP_overlaps_DEGs.20210927.v1.tsv.gz")
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
# Load libraries  and set working directory  -----------------------------------
## load libraries
packages = c(
"plyr",
"dplyr",
"stringr",
"reshape2",
"data.table",
"ggplot2",
"ggrepel",
"ggrastr",
"RColorBrewer"
)
for (pkg_name_tmp in packages) {
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
install.packages(pkg_name_tmp, dependencies = T)
}
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(pkg_name_tmp)
}
library(package = pkg_name_tmp, character.only = T)
}
## set working directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# input -------------------------------------------------------------------
## input degs
peaks2degs_df <- fread(data.table = F, input = "../../data/2EMTclusters_vs_5Epithelialclusters.DAP_overlaps_DEGs.20210927.v1.tsv.gz")
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
nrow(plotdata_df) ## 1096 gene-peak pairs
length(unique(plotdata_df$Gene)) ## 1030 genes
View(plotdata_df)
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
# make plot data ----------------------------------------------------------
peaks2degs_df <- as.data.frame(peaks2degs_df)
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
View(peaks2degs_df)
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA))
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak)
# make plot data ----------------------------------------------------------
peaks2degs_df <- data.table(peaks2degs_df)
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
# input -------------------------------------------------------------------
## input degs
peaks2degs_df <- fread(data.table = F, input = "../../data/2EMTclusters_vs_5Epithelialclusters.DAP_overlaps_DEGs.20210927.v1.tsv.gz")
head(peaks2degs_df)
View(peaks2degs_df)
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
dplyr::select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
dplyr::select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak) %>%
unique()
nrow(plotdata_df) ## 1096 gene-peak pairs
length(unique(plotdata_df$Gene)) ## 1030 genes
length(unique(plotdata_df$peak)) ## 1096 promoter peaks
# highlight genes with fold change > 1 ----------------------------------------------------
plotdata_df <- plotdata_df %>%
mutate(highlight = ((avg_log2FC.snATAC >= 1 & avg_log2FC.snRNA >= 1) | (avg_log2FC.snATAC <= -1 & avg_log2FC.snRNA <= -1) | (Gene %in% c("VIM", "FN1", "CDH2", "WNT5B"))))
p <- ggplot() + geom_point_rast(data = plotdata_df,
mapping = aes(x = avg_log2FC.snATAC, y = avg_log2FC.snRNA),
alpha = 0.8, shape = 16, size = 1.5)
p <- p + geom_vline(xintercept = 0, linetype = 2, color = "grey")
p <- p + geom_hline(yintercept = 0, linetype = 2, color = "grey")
p <- p + stat_cor(method = "spearman", label.x = 1, label.y = 1.5, size = 4)
p <- p + geom_text_repel(data = subset(x = plotdata_df, highlight == T & avg_log2FC.snATAC > 0),
mapping = aes(x = avg_log2FC.snATAC, y = avg_log2FC.snRNA, label = Gene),
max.overlaps = Inf, size = 5,
segment.size = 0.4, segment.alpha = 0.6, min.segment.length = 0, box.padding = 0.5, color = RColorBrewer::brewer.pal(n = 9, name = "Set1")[1])
p <- p + geom_text_repel(data = subset(x = plotdata_df, highlight == T & avg_log2FC.snATAC < 0),
mapping = aes(x = avg_log2FC.snATAC, y = avg_log2FC.snRNA, label = Gene),
max.overlaps = Inf, size = 5, force = 3,
segment.size = 0.4, segment.alpha = 0.6, min.segment.length = 0, box.padding = 0.5, color = RColorBrewer::brewer.pal(n = 6, name = "Set1")[2], xlim = c(-4, -1))
p <- p + guides(color = guide_legend(nrow = 1, override.aes = aes(size = 3), label.theme = element_text(size = 14)))
p <- p + theme_classic()
p <- p + theme(axis.text = element_text(size = 18, color = "black"),
axis.title = element_text(size = 14),
legend.position = "bottom", legend.box = "horizontal")
p <- p + ylim(c(-4, 4)) + xlim(c(-4, 4))
p <- p + xlab("Log2(fold change of gene promoter accessiblity)")
p <- p + ylab("Log2(fold change of gene expression)")
p$layers
p$labels
cor.test(plotdata_df$avg_log2FC.snATAC, plotdata_df$avg_log2FC.snRNA)
test_result <- cor.test(plotdata_df$avg_log2FC.snATAC, plotdata_df$avg_log2FC.snRNA)
test_result <- cor.test(plotdata_df$avg_log2FC.snATAC, plotdata_df$avg_log2FC.snRNA)
test_result$p.value
# Manuscript:   Epigenetic and transcriptomic characterization reveals progression markers and essential pathways in clear cell renal cell carcinoma
# Author:       Yige Wu
# Description:  Scatter plot showing the positive correlation of chromatin accessibility and transcriptional changes
# Section:      Results - Impact of BAP1 mutations on the transcriptional network in ccRCC
#=======================================================================================
# Load libraries  and set working directory  -----------------------------------
## load libraries
packages = c(
"plyr",
"dplyr",
"stringr",
"reshape2",
"data.table",
"ggplot2",
"ggpubr",
"ggrepel",
"RColorBrewer"
)
for (pkg_name_tmp in packages) {
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
install.packages(pkg_name_tmp, dependencies = T)
}
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(pkg_name_tmp)
}
library(package = pkg_name_tmp, character.only = T)
}
## set working directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# input -------------------------------------------------------------------
peaks2degs_df <- fread(data.table = F, input = "../../data/BAP1_vs_NonMutant_DAP2DEG.20211011.v1.tsv.gz")
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak2gene_type) %>%
unique()
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
dplyr::select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak2gene_type) %>%
unique()
# Manuscript:   Epigenetic and transcriptomic characterization reveals progression markers and essential pathways in clear cell renal cell carcinoma
# Author:       Yige Wu
# Description:  Scatter plot showing the positive correlation of chromatin accessibility and transcriptional changes
# Section:      Results - Impact of BAP1 mutations on the transcriptional network in ccRCC
#=======================================================================================
# Load libraries  and set working directory  -----------------------------------
## load libraries
packages = c(
"plyr",
"dplyr",
"stringr",
"reshape2",
"data.table",
"ggplot2",
"ggpubr",
"ggrepel",
"RColorBrewer"
)
for (pkg_name_tmp in packages) {
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
install.packages(pkg_name_tmp, dependencies = T)
}
if (!(pkg_name_tmp %in% installed.packages()[,1])) {
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(pkg_name_tmp)
}
library(package = pkg_name_tmp, character.only = T)
}
## set working directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# input -------------------------------------------------------------------
peaks2degs_df <- fread(data.table = F, input = "../../data/BAP1_vs_NonMutant_DAP2DEG.20211011.v1.tsv.gz")
# make plot data ----------------------------------------------------------
plotdata_df <- peaks2degs_df %>%
filter(!is.na(avg_log2FC.snATAC) & !is.na(avg_log2FC.snRNA)) %>%
dplyr::select(avg_log2FC.snATAC, avg_log2FC.snRNA, Gene, peak2gene_type) %>%
unique()
## make colors
colors_peak2genetype <- brewer.pal(n = 7, name = "Dark2")[c(4, 6)]
names(colors_peak2genetype) <- c("Promoter", "Enhancer")
# plot highlight genes ----------------------------------------------------
plotdata_df <- plotdata_df %>%
mutate(highlight = (Gene %in% c("PTPRJ", "DLC1", "DDIT4", "PEBP1")  | (Gene %in% c("SLC38A1", "RAPGEF5", "EPHA6", "DUSP1", "FABP6") & avg_log2FC.snATAC > 0) | (Gene == "CES3" & avg_log2FC.snATAC < -1.5)))
p <- ggscatter(data = plotdata_df, x = "avg_log2FC.snATAC", y = "avg_log2FC.snRNA", color = "peak2gene_type", alpha = 0.8, shape = 16, size = 2.5,
add = "reg.line", add.params = list(color = "grey50", linetype = 2), # Customize reg. line
conf.int = F # Add confidence interval
)
p <- p + geom_vline(xintercept = 0, linetype = 2, color = "grey")
p <- p + geom_hline(yintercept = 0, linetype = 2, color = "grey")
# p <- p + stat_cor(method = "pearson", label.x = 0, label.y = 0, size = 4)
p <- p + geom_text_repel(data = subset(x = plotdata_df, highlight == T),
mapping = aes(x = avg_log2FC.snATAC, y = avg_log2FC.snRNA, label = Gene),
max.overlaps = Inf, size = 6,
segment.size = 0.4, segment.alpha = 0.6, min.segment.length = 0, box.padding = 0.5)
p <-  p + scale_color_manual(values = colors_peak2genetype)
p <- p + guides(color = guide_legend(nrow = 1, override.aes = aes(size = 3), label.theme = element_text(size = 14)))
p <- p + theme(axis.text = element_text(size = 18, color = "black"),
axis.title = element_text(size = 14),
legend.position = "bottom", legend.box = "horizontal")
test_result <- cor.test(plotdata_df$avg_log2FC.snATAC, plotdata_df$avg_log2FC.snRNA)
test_result$p.value
# write output ------------------------------------------------------------
dir_out <- paste0("../../outputs/"); dir.create(dir_out)
file2write <- paste0(dir_out, "F7a_Volcanoplot_BAP1_DEgs", ".pdf")
pdf(file2write, width = 5.5, height = 6, useDingbats = F)
print(p)
dev.off()
View(plot_data_df)
# input -------------------------------------------------------------------
barcode_info_df <- fread(data.table = F, input = "../../data/snRNA.UMAPCoordinate.ClusterID.CellType.ByBarcode.tsv.gz")
# make source data ------------------------------------------------------------
plot_data_df <- barcode_info_df %>%
mutate(Cell_group = Cell_group_w_epithelialcelltypes) %>%
arrange(desc(Cell_group)) %>%
select(UMAP_1, UMAP_2, Cell_group)
# make source data ------------------------------------------------------------
plot_data_df <- barcode_info_df %>%
mutate(Cell_group = Cell_group_w_epithelialcelltypes) %>%
arrange(desc(Cell_group)) %>%
dplyr::select(UMAP_1, UMAP_2, Cell_group)
plot_data_df <- rbind(plot_data_df[plot_data_df$Cell_group %in% c("Unknown", "Immune others"),], plot_data_df[!(plot_data_df$Cell_group %in% c("Unknown", "Immune others")),])
View(plot_data_df)
## save source data
write.table(x = plot_data_df, file = "../../plot_data/F1b.left.SourceData.tsv", quote = F, sep = "\t", row.names = F)
# input source data -------------------------------------------------------
plot_data_df <- fread(data.table = F, input = "../../plot_data/F1b.left.SourceData.tsv")
plot_data_df <- fread(data.table = F, input = "../../plot_data/F1b.left.SourceData.tsv")
# make colors -------------------------------------------------------------
colors_cellgroup <- c("#E7298A", "#E69F00", "#56B4E9", "#F0E442", "#D55E00", "#0072B2", "#FB9A99", "#B2DF8A", "#000000",
"#1B9E77", "#B15928", "#7570B3", "#90AD1C", "#AA0DFE", "#85660D", "#BDCDFF", "grey80", "grey50")
names(colors_cellgroup) <- c("Tumor cells", "CD4+ T-cells", "CD8+ T-cells", "Macrophages", "NK cells", "DC", "Fibroblasts", "Myofibroblasts",  "B-cells",
"Proximal tubule", "Loop of Henle", "Distal convoluted tubule",
'Principle cells', "Intercalated cells", "Podocytes", "Endothelial cells",
"Unknown", "Immune others")
# plot --------------------------------------------------------------------
p <- ggplot()
p <- p + geom_point_rast(data = plot_data_df,
mapping = aes(x = UMAP_1, y = UMAP_2, color = Cell_group),
alpha = 1, size = 0.1, shape = 16)
p <- p + scale_color_manual(values = colors_cellgroup)
p <- p + guides(colour = guide_legend(override.aes = list(size=4), title = NULL))
p <- p + theme_void()
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
# axis.line = element_line(colour = "black"))
p <- p + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
p <- p + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank())
p <- p + theme(legend.position="bottom", aspect.ratio=1)
#Print extended figure 2b
dir_out <- paste0(dir_base, "outputs/"); dir.create(dir_out)
file2write <- paste0(dir_out,"F1b_UMAP_snRNA.pdf")
pdf(file = file2write, width = 8, height = 9, useDingbats = F)
print(p)
dev.off()
barcode_info_df <- fread(data.table = F, input = "../../data/snATAC.UMAPCoordinate.CellType.ByBarcode.tsv.gz")
## format data
plot_data_df <- barcode_info_df %>%
mutate(Cell_group = ifelse(cell_type %in% c("EMT tumor cells", "Tumor"), "Tumor cells",
ifelse(cell_type == "PT", "Proximal tubule", cell_type))) %>%
select(UMAP_1, UMAP_2, Cell_group)
## format data
plot_data_df <- barcode_info_df %>%
mutate(Cell_group = ifelse(cell_type %in% c("EMT tumor cells", "Tumor"), "Tumor cells",
ifelse(cell_type == "PT", "Proximal tubule", cell_type))) %>%
dplyr::select(UMAP_1, UMAP_2, Cell_group)
## save source data
dir_out <- "../../plot_data/"; dir.create(dir_out)
write.table(x = plot_data_df, file = "../../plot_data/F1b.right.SourceData.tsv", quote = F, sep = "\t", row.names = F)
# make colors -------------------------------------------------------------
colors_cellgroup <- c("#E7298A", "#E69F00", "#56B4E9", "#F0E442", "#D55E00", "#0072B2", "#FB9A99", "#B2DF8A", "#000000",
"#1B9E77", "#B15928", "#7570B3", "#90AD1C", "#AA0DFE", "#85660D", "#BDCDFF", "grey80", "grey50")
names(colors_cellgroup) <- c("Tumor cells", "CD4+ T-cells", "CD8+ T-cells", "Macrophages", "NK cells", "DC", "Fibroblasts", "Myofibroblasts",  "B-cells",
"Proximal tubule", "Loop of Henle", "Distal convoluted tubule",
'Principle cells', "Intercalated cells", "Podocytes", "Endothelial cells",
"Unknown", "Immune others")
# plot --------------------------------------------------------------------
p <- ggplot()
p <- p + geom_point_rast(data = plot_data_df,
mapping = aes(x = UMAP_1, y = UMAP_2, color = Cell_group),
alpha = 1, size = 0.05, shape = 16)
p <- p + scale_color_manual(values = colors_cellgroup)
p <- p + guides(colour = guide_legend(override.aes = list(size=4), title = NULL))
p <- p + theme_void()
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
# axis.line = element_line(colour = "black"))
p <- p + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
p <- p + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank())
p <- p + theme(legend.position="bottom", aspect.ratio=1)
#Print extended figure 2b
dir_out <- paste0(dir_base, "outputs/"); dir.create(dir_out)
file2write <- paste0(dir_out,"F1.UMAP.snATAC.pdf")
pdf(file = file2write, width = 8, height = 9, useDingbats = F)
print(p)
dev.off()
dir_out <- "../../outputs/"; dir.create(dir_out)
file2write <- paste0(dir_out,"F1.UMAP.snATAC.pdf")
pdf(file = file2write, width = 8, height = 9, useDingbats = F)
print(p)
dev.off()
# specify parameters ------------------------------------------------------
dataname_snrna <- "Tumor cells vs. non-tumor cells (snRNA-seq)"
dataname_snatac <- "Tumor cells vs. non-tumor cells (snATAC-seq)"
dataname_bulk_rna <- "Tumors vs. NATs (bulk RNA-seq)"
dataname_bulk_protein <- "Tumors vs. NATs (bulk proteomics)"
# make source data -------------------------------------------------------------------
## input genes to process
genes_process_df <- fread(data.table = F, input = "../../data/ccRCC_markers.Surface.20210824.v1.tsv")
## input ATAC fold changes
geneactivity_fc_df <- fread(data.table = F, input = "../../data/FoldChange_ATACGeneActivity_Tumor_vs_AllOtherCells.20210924.tsv")
## filter genes that does not show highest SCT averaged expression in tumor cells compared to other cell types
genes_filter <- genes_process_df$Gene
genes_filter <- genes_filter[!(genes_filter %in% c("PIK3CB", "ARHGEF28", "PTGER3", "PARD3", "GNG12", "EFNA5", "SPIRE1", "LIFR", "PKP4", "SORBS1", "PTPRM", "FBXO16", "PAM"))]
genes_filter <- genes_filter[!(genes_filter %in% c("DPP6", "CPNE8", "EFNA5", "MGLL", "SPIRE1", "SPIRE1", "PLCB1", "OSMR", "SORBS1", "ANO6", "EPB41", "PAM"))]
## make source data
genes_process_df <- merge(x = genes_process_df,
y = geneactivity_fc_df %>%
rename(log2FC.snATAC = avg_log2FC), by = c("Gene"), all.x = T)
plotdata_wide_df <- genes_process_df %>%
filter(Gene %in% genes_filter) %>%
dplyr::select(Gene, avg_log2FC.mean.TumorcellsvsNontumor, log2FC.bulkRNA, log2FC.bulkpro, log2FC.snATAC) %>%
arrange(desc(avg_log2FC.mean.TumorcellsvsNontumor))
# make source data -------------------------------------------------------------------
## input genes to process
genes_process_df <- fread(data.table = F, input = "../../data/ccRCC_markers.Surface.20210824.v1.tsv")
dataname_snrna <- "Tumor cells vs. non-tumor cells (snRNA-seq)"
dataname_snatac <- "Tumor cells vs. non-tumor cells (snATAC-seq)"
dataname_bulk_rna <- "Tumors vs. NATs (bulk RNA-seq)"
dataname_bulk_protein <- "Tumors vs. NATs (bulk proteomics)"
# make source data -------------------------------------------------------------------
## input genes to process
genes_process_df <- fread(data.table = F, input = "../../data/ccRCC_markers.Surface.20210824.v1.tsv")
## input ATAC fold changes
geneactivity_fc_df <- fread(data.table = F, input = "../../data/FoldChange_ATACGeneActivity_Tumor_vs_AllOtherCells.20210924.tsv")
## filter genes that does not show highest SCT averaged expression in tumor cells compared to other cell types
genes_filter <- genes_process_df$Gene
genes_filter <- genes_filter[!(genes_filter %in% c("PIK3CB", "ARHGEF28", "PTGER3", "PARD3", "GNG12", "EFNA5", "SPIRE1", "LIFR", "PKP4", "SORBS1", "PTPRM", "FBXO16", "PAM"))]
genes_filter <- genes_filter[!(genes_filter %in% c("DPP6", "CPNE8", "EFNA5", "MGLL", "SPIRE1", "SPIRE1", "PLCB1", "OSMR", "SORBS1", "ANO6", "EPB41", "PAM"))]
## make source data
genes_process_df <- merge(x = genes_process_df,
y = geneactivity_fc_df %>%
rename(log2FC.snATAC = avg_log2FC), by = c("Gene"), all.x = T)
